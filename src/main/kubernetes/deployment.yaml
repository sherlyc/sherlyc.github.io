apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${project.artifactId}
spec:
  replicas: ${environmentScale}
  strategy:
    rollingUpdate:
      maxSurge: ${environmentScale}
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: ${project.artifactId}
  template:
    metadata:
      labels:
        app: ${project.artifactId}
    spec:
      imagePullSecrets:
        - name: ${environmentDockerRegistry}
      containers:
        - name: stuff-experience-frontend
          image: ${environmentDockerRegistry}/${organisation.domain}/${organisation.group}/${project.artifactId}:${project.version}
          ports:
            - containerPort: 4000
          env:
            - name: SPADE_ENV
              value: ${spadeEnv}
            - name: SPADE_VERSION
              value: ${project.version}
            - name: SKIP_SECRETS
              value: 'true'
            - name: NEW_RELIC_APP_NAME
              value: 'stuff-experience-frontend-${environment}'
            - name: NR_NATIVE_METRICS_NO_BUILD
              value: 'true'
            - name: NEW_RELIC_NO_CONFIG_FILE
              value: 'true'
            - name: NEW_RELIC_LOG
              value: STDOUT
            - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
              value: 'true'
            - name: NEW_RELIC_LABELS
              value: 'Team: experience'
            - name: NEW_RELIC_LOG_LEVEL
              value: info
            - name: NEW_RELIC_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: newrelic-apm-license
                  key: NEW_RELIC_LICENSE_KEY
            - name: NEW_RELIC_ATTRIBUTES_EXCLUDE
              value: >
                [
                  'request.headers.cookie',
                  'request.headers.authorization',
                  'request.headers.proxyAuthorization',
                  'request.headers.setCookie*',
                  'request.headers.x*',
                  'response.headers.cookie',
                  'response.headers.authorization',
                  'response.headers.proxyAuthorization',
                  'response.headers.setCookie*',
                  'response.headers.x*',
                ]
          resources:
            limits:
              # Roll out OOMKilled fix
              #              cpu: ${quota-limits.smallCpu}
              #              memory: ${quota-limits.smallMemory}
              cpu: 600m
              memory: 512Mi
            requests:
              cpu: ${quota-requests.smallCpu}
              memory: ${quota-requests.smallMemory}
          volumeMounts:
            - mountPath: /etc/${project.artifactId}/
              name: config-v${parsedVersion.majorVersion}
              readOnly: true
          readinessProbe:
            httpGet:
              path: '/health/light'
              port: 4000
            initialDelaySeconds: 2
            periodSeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: '/health/light'
              port: 4000
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: config-v${parsedVersion.majorVersion}
          configMap:
            name: ${project.artifactId}-config-v${parsedVersion.majorVersion}
